// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use 'mixins' as mixins;
@use 'vars/colors' as colors;
@use 'vars/offsets' as offsets;
@use 'vars/borders' as borders;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$tattoo-manager-primary: mat.define-palette(mat.$indigo-palette);
$tattoo-manager-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$tattoo-manager-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$tattoo-manager-theme: mat.define-light-theme(
  (
    color: (
      primary: $tattoo-manager-primary,
      accent: $tattoo-manager-accent,
      warn: $tattoo-manager-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($tattoo-manager-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-size: 16px;
  font: var(--font-main);
}

html {
  @include mixins.color-variables(colors.$base-colors);
  @include mixins.var-range(--offset, offsets.$offset);
  @include mixins.var-range(--border, borders.$border);
  @include mixins.var-range(--border-radius, borders.$border-radius);
}

body {
  margin: 0;
  font-size: 1rem;
  background-color: var(--white);
  color: var(--black);
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

h2 {
  margin-bottom: var(--offset-xs);
}

a {
  text-decoration: none;
  cursor: pointer;
}

ul,
li {
  list-style: none;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s;
}

// .input {
//   padding: 0 var(--offset);
//   height: 4rem;
//   outline: none;
//   border: $border-input;
//   border-radius: var(--border-radius-m);
//   background-color: var(--white);
//   color: var(--gray2);

//   &::placeholder {
//     color: var(--gray2);
//   }
//   &:focus {
//     box-shadow: $border-input-select;
//     color: var(--black);
//   }
//   &:hover {
//     box-shadow: $border-input-select;
//   }
//   &-warning {
//     border: $border-input-warning;
//   }
// }

// .error {
//   padding: 0.7rem;
//   margin: var(--offset) 0;
//   opacity: 0.9;
//   background-color: var(--warning);
//   color: var(--white);
// }

// .sidebar-list-item-icon path,
// .sidebar-list-item-icon g {
//   stroke-width: 1;
// }

// .icon {
//   @include mixins.flex(center, center);
// }

// .link {
//   color: var(--primary);
//   font: var(--font-currentSmall);
// }
