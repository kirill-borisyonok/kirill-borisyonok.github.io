// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use 'mixins' as mixins;
@use 'vars/colors' as colors;
@use 'vars/offsets' as offsets;
@use 'vars/borders' as borders;
@use '@angular/material/theming' as theming;

$adfree-primary-settings: (
  50: #e3e8ec,
  100: #b8c6cf,
  200: #89a0af,
  300: #5a7a8e,
  400: #365e76,
  500: #13415e,
  600: #113b56,
  700: #0e324c,
  800: #0b2a42,
  900: #061c31,
  A100: #6aaeff,
  A200: #3792ff,
  A400: #0476ff,
  A700: #006aea,
  contrast: (
    50: theming.$black-87-opacity,
    100: theming.$black-87-opacity,
    200: theming.$black-87-opacity,
    300: theming.$black-87-opacity,
    400: theming.$black-87-opacity,
    500: white,
    600: white,
    700: white,
    800: theming.$white-87-opacity,
    900: theming.$white-87-opacity,
    A100: theming.$black-87-opacity,
    A200: white,
    A400: white,
    A700: white,
  ),
);
$adfree-accent-settings: (
  50: #f0fae4,
  100: #d8f2bc,
  200: #bfe990,
  300: #a5e063,
  400: #91da41,
  500: #7ed320,
  600: #76ce1c,
  700: #6bc818,
  800: #61c213,
  900: #4eb70b,
  A100: #edffe4,
  A200: #cbffb1,
  A400: #aaff7e,
  A700: #99ff64,
  contrast: (
    50: theming.$black-87-opacity,
    100: theming.$black-87-opacity,
    200: theming.$black-87-opacity,
    300: theming.$black-87-opacity,
    400: theming.$black-87-opacity,
    500: white,
    600: white,
    700: white,
    800: theming.$white-87-opacity,
    900: theming.$white-87-opacity,
    A100: theming.$black-87-opacity,
    A200: white,
    A400: white,
    A700: white,
  ),
);
$adfree-warn-settings: (
  50: #fce8e5,
  100: #f7c7be,
  200: #f2a193,
  300: #ec7b67,
  400: #e85f47,
  500: #e44326,
  600: #e13d22,
  700: #dd341c,
  800: #d92c17,
  900: #d11e0d,
  A100: #fffdfd,
  A200: #ffcdca,
  A400: #ff9e97,
  A700: #ff867e,
  contrast: (
    50: theming.$black-87-opacity,
    100: theming.$black-87-opacity,
    200: theming.$black-87-opacity,
    300: theming.$black-87-opacity,
    400: theming.$black-87-opacity,
    500: white,
    600: white,
    700: white,
    800: theming.$white-87-opacity,
    900: theming.$white-87-opacity,
    A100: theming.$black-87-opacity,
    A200: white,
    A400: white,
    A700: white,
  ),
);

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$tattoo-manager-primary: mat.define-palette($adfree-primary-settings);
$tattoo-manager-accent: mat.define-palette($adfree-accent-settings);

// The warn palette is optional (defaults to red).
$tattoo-manager-warn: mat.define-palette($adfree-warn-settings);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$tattoo-manager-theme: mat.define-light-theme(
  (
    color: (
      primary: $tattoo-manager-primary,
      accent: $tattoo-manager-accent,
      warn: $tattoo-manager-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($tattoo-manager-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-size: 16px;
  font: var(--font-main);
}

html {
  @include mixins.color-variables(colors.$base-colors);
  @include mixins.var-range(--offset, offsets.$offset);
  @include mixins.var-range(--border, borders.$border);
  @include mixins.var-range(--border-radius, borders.$border-radius);
}

body {
  margin: 0;
  font-size: 1rem;
  background-color: var(--white);
  color: var(--black);
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

h2 {
  margin-bottom: var(--offset-xs);
}

a {
  text-decoration: none;
  cursor: pointer;
}

ul,
li {
  list-style: none;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s;
}

.mdc-button {
  background-color: var(--primary) !important;
  color: white !important;
}

.mat-vertical-content {
    padding-top: 1rem !important;
}

// .error {
//   padding: 0.7rem;
//   margin: var(--offset) 0;
//   opacity: 0.9;
//   background-color: var(--warning);
//   color: var(--white);
// }
